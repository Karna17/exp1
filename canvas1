var canvas=document.querySelector('#can1');
canvas.width=window.innerWidth;
canvas.height=window.innerHeight;
var c= canvas.getContext('2d');
var x,y,dx,dy,radius,a,b;
a=0;
b=0;
function Circle(x,y,dx,dy,radius){
	this.x=x;
	this.y=y;
	this.dx=dx;
	this.dy=dy;
	this.radius=radius
	this.draw=function(){
		c.beginPath();
		c.arc(this.x,this.y,this.radius,0,Math.PI*2,false);
		c.strokeStyle='White';
		c.stroke();
		c.fill();
	} 
	this.update=function(){
				if (this.x+this.radius>innerWidth||this.x-this.radius<0){
				this.dx=-(this.dx);
		}
				if (this.y+this.radius>innerHeight||this.y-this.radius<0){
				this.dy=-(this.dy);
		}
		this.x +=this.dx;
		this.y +=this.dy;
		this.draw();
		
	}
}

function Line(x,y,dx,dy,i,radius){
	this.x=x;
	this.y=y;
	this.dx=dx;
	this.dy=dy;
	this.i=i;
	this.radius=radius;
	this.linedraw=function(){
		var g,h;
		g=this.x;
		h=this.x;
		c.beginPath();
		c.moveTo(this.x, this.y);
			if(a==0||b==0){
				c.lineTo(a, b);
			}
			else if(this.i<<79){
				c.lineTo(a, b);
			}
			else if(this.i==79){
				c.arc(this.x,this.y,10,0,Math.PI*2,false);
			}
			else{
				c.lineTo(g,h);
			}
			c.stroke();
			c.strokeStyle='White'
			a=this.x;
			b=this.y;
	}
	this.updatel=function(){
		if (this.x+this.radius>innerWidth||this.x-this.radius<0){
			this.dx=-(this.dx);
	}
			if (this.y+this.radius>innerHeight||this.y-this.radius<0){
			this.dy=-(this.dy);
	}
		this.x +=this.dx;
		this.y +=this.dy;
		this.linedraw();
	}
}
var circleArray=[];
var lineArray=[];
for(var i=0;i<100;i++){
		x=Math.random()*(innerWidth-radius*2)+radius;
		dx=(Math.random()-0.5)*4;
		y=Math.random()*(innerHeight-radius*2)+radius;
		dy=(Math.random()-0.5)*4;
		radius=8;
		circleArray.push(new Circle(x,y,dx,dy,radius));
		lineArray.push(new Line(x,y,dx,dy,i,radius));
		
}
function animate(){
  requestAnimationFrame(animate);
  c.clearRect(0,0,innerWidth,innerHeight);
	  for(var i=0;i<circleArray.length;i++){
		  circleArray[i].update();
		  lineArray[i].updatel();
	  }
}
animate();
